<div>
 <form #productForm="ngForm" >
    <table>
        <tr>
            <td>
                <label class="form-control">Product Name</label>
            </td>
            <td>
                <input required name="pname"  #pname="ngModel" class="form-control" [(ngModel)]="product.name" type="text">
                
            </td>
            <td>
                <span *ngIf="pname.errors && pname.touched" class="alert alert-danger">
                    Name cannot be empty
                </span>
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Price</label>
            </td>
            <td>
                <input #pprice="ngModel" name="pprice" required min="1" class="form-control" [(ngModel)]="product.price" type="number">
            </td>
            <td>
                <span *ngIf="pprice.errors && pprice.touched" class="alert alert-danger">
                  <span *ngIf="pprice.errors['required']">
                    Price cannot be 0
                  </span>
                  <span *ngIf="pprice.errors['min']">
                    Price has to be greater than 0
                  </span>
                </span>
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Qantity</label>
            </td>
            <td>
                <input #pquantity min="1" name="pquantity" class="form-control" [(ngModel)]="product.quantity" type="number">
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Type</label>
            </td>
            <td>
               <input name="type" type="radio" checked (change)="changeVeg()" class="radio" >Veg
               <input name="type" type="radio" (change)="changeNonVeg()" class="radio">Non-Veg
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Pic</label>
            </td>
            <td>
                <input class="form-control" (change)="assignFile(pic)" #pic  type="file">
            </td>
        </tr>

        <tr>
            <td>
                <button class="btn btn-success" (click)="addProduct()">Add</button>
            </td>
            <td>
                <button class="btn btn-danger">Cancel</button>
            </td>
        </tr>
    </table>
 </form>
 <div *ngIf="productForm.form.invalid && showErrors">
    {{(productForm.form.controls['pname'].errors ?"Check the name":"") | uppercase}}
    <br>
    {{(productForm.form.controls['pprice'].errors?"Check the price":"") | lowercase}}
    <br>
    {{productForm.form.controls['pquantity'].errors?"Check the quantity "+(pprice|json):""}}
 </div>
</div>
--------------------------
import { Component, ViewChild } from '@angular/core';
import { Product } from '../models/product';
import {NgForm} from '@angular/forms';

@Component({
  selector: 'app-addproduct',
  templateUrl: './addproduct.component.html',
  styleUrls: ['./addproduct.component.css']
})
export class AddproductComponent {
  product:Product =new Product();
  showErrors:boolean = false;
  @ViewChild("productForm") productForm:any
  order:any 
  constructor(){
    this.order=  {id:101,amount:200,
      orderedDate:new Date(2023,10,22),
      remarks:"This is a long description that is being done to show the purpose of custom pipe"}
  }
  changeVeg(){
    this.product.type="Veg";
  }
  changeNonVeg(){
    this.product.type="Non-Veg";
  }
  assignFile(pic:any){
    this.product.pic = "/assets/images/"+pic.files[0].name;
  }
  addProduct(){
    //console.log()
    //console.log(this.product)
    console.log(this.productForm)
    if(this.productForm.valid)
    {
      this.showErrors=false;
      alert("Added");
    }
      
    else
    {
      this.showErrors=true;
      alert("Details are incomplete")
    }
      
  }
}

---------------------
<div>
 <form #productForm="ngForm" >
    <table>
        <tr>
            <td>
                <label class="form-control">Product Name</label>
            </td>
            <td>
                <input required name="pname"  #pname="ngModel" class="form-control" [(ngModel)]="product.name" type="text">
                
            </td>
            <td>
                <span *ngIf="pname.errors && pname.touched" class="alert alert-danger">
                    Name cannot be empty
                </span>
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Price</label>
            </td>
            <td>
                <input #pprice="ngModel" name="pprice" required min="1" class="form-control" [(ngModel)]="product.price" type="number">
            </td>
            <td>
                <span *ngIf="pprice.errors && pprice.touched" class="alert alert-danger">
                  <span *ngIf="pprice.errors['required']">
                    Price cannot be 0
                  </span>
                  <span *ngIf="pprice.errors['min']">
                    Price has to be greater than 0
                  </span>
                </span>
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Qantity</label>
            </td>
            <td>
                <input #pquantity min="1" name="pquantity" class="form-control" [(ngModel)]="product.quantity" type="number">
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Type</label>
            </td>
            <td>
               <input name="type" type="radio" checked (change)="changeVeg()" class="radio" >Veg
               <input name="type" type="radio" (change)="changeNonVeg()" class="radio">Non-Veg
            </td>
        </tr>
        <tr>
            <td>
                <label class="form-control">Product Pic</label>
            </td>
            <td>
                <input class="form-control" (change)="assignFile(pic)" #pic  type="file">
            </td>
        </tr>

        <tr>
            <td>
                <button class="btn btn-success" (click)="addProduct()">Add</button>
            </td>
            <td>
                <button class="btn btn-danger">Cancel</button>
            </td>
        </tr>
    </table>
 </form>
 <div *ngIf="productForm.form.invalid && showErrors">
    {{(productForm.form.controls['pname'].errors ?"Check the name":"") | uppercase}}
    <br>
    {{(productForm.form.controls['pprice'].errors?"Check the price":"") | lowercase}}
    <br>
    {{productForm.form.controls['pquantity'].errors?"Check the quantity ":""}}
    <br>
    {{product | json}}
 </div>
</div>
<hr>
order Number : {{order.id}}
<br>
order Amount : {{order.amount | currency:'INR'}}
<br>
order Date : {{order.orderedDate | date:'dd-MMMM-yy'}}
<br>
order Remarks : {{order.remarks |remarks}}



---------------
ng g pipe remarks
----------------------------------------------------
import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'remarks'
})
export class RemarksPipe implements PipeTransform {

  transform(value: unknown, ...args: unknown[]): unknown {
    return (value as string).substring(0,10)+"...";
  }

}
-----------------------------------------------------------

