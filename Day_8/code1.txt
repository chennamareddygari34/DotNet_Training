using CompanyApplication.Interfaces;
using CompanyApplication.Interfaces.CompanyApplication.Interfaces;
using CompanyApplication.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;
using System.Drawing.Printing;

namespace CompanyApplication.Controllers
{
    public class EmployeeController : Controller
    {
        private readonly IRepository<int, Employee> _repository;
        private readonly IRepository<int, Department> _departmentRepo;

        public EmployeeController(IRepository<int, Employee> repository, IRepository<int, Department> departmentRepo)
        {
            _repository = repository;
            _departmentRepo = departmentRepo;
        }
        public IActionResult Index()
        {
            var employees = _repository.GetAll();
            return View(employees);
        }

        public IActionResult Create()
        {
            ViewBag.departmentList = GetDepartments();
            return View();
        }
        [HttpPost]
        public IActionResult Create(Employee employee)
        {
            ViewBag.departmentList = GetDepartments();
            _repository.Add(employee);
            return RedirectToAction("Index");
        }
        [HttpGet]
        public IActionResult Delete(int id)
        {
            var employee = _repository.Get(id);
            return View(employee);
        }
        [HttpPost]
        public IActionResult Delete(int id,Employee employee)
        {
            _repository.Delete(id);
            return RedirectToAction("Index");
        }

        private List<SelectListItem> GetDepartments()
        {
            List<SelectListItem> departmentList = new List<SelectListItem>();
            var departments = _departmentRepo.GetAll();
            foreach (var item in departments)
            {
                departmentList.Add(
                    new SelectListItem
                    { Text = item.Name, Value = item.DepartmentNumber.ToString() }
                    );
            }
            return departmentList;
        }
    }
}
--------------------------------------------------------------------------------------------------------
using CompanyApplication.Interfaces;
using CompanyApplication.Interfaces.CompanyApplication.Interfaces;
using CompanyApplication.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using System.Diagnostics;



namespace CompanyApplication.Controllers
{
    public class DepartmentController : Controller
    {
        private readonly IRepository<int, Department> _repository;



        public DepartmentController(IRepository<int, Department> repository)
        {
            _repository = repository;
        }
        //List<Department> departments = new List<Department>();
        public IActionResult Index()
        {
            return View(_repository.GetAll());
        }
        [HttpGet]
        public IActionResult Add()
        {
            return View();
        }
        [HttpPost]
        public IActionResult Add(Department department)
        {
            _repository.Add(department);
            return RedirectToAction("Index");
        }
        #region update
        [HttpGet]
        public IActionResult Update(int id)
        {
            var department = _repository.Get(id);
            return View(department);
        }
        [HttpPost]
        public IActionResult Update(int id, Department department)
        {
            ViewBag.Message = "";
            try
            {
                _repository.Update(department);



                return RedirectToAction("Index");
            }
            catch (Exception e)
            {
                Debug.WriteLine(e.Message);
                ViewBag.Message = "department not found";
            }
            return View(department);
        }
        #endregion
        #region delete
        [HttpGet]
        public IActionResult Delete(int id)
        {
            var department = _repository.Get(id);
            return View(department);
        }
        [HttpPost]
        public IActionResult Delete(int id, Department department)
        {



            ViewBag.Message = "";
            try
            {
                _repository.Delete(id);



                return RedirectToAction("Index");
            }
            catch (Exception e)
            {
                Debug.WriteLine(e.Message);
                ViewBag.Message = "Unable to delete department";



            }
            return View(department);
        }
        #endregion





    }
}
--------------------------------------------------------------------------------------

@model CompanyApplication.Models.Department



@{

    ViewData["Title"] = "Add";

}



<h1>Add</h1>



<h4>Department</h4>

<hr />

<div class="row">

    <div class="col-md-4">

        <form asp-action="Add">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @*@ <div class="form-group">

            <label asp-for="DepartmentNumber" class="control-label"></label>

            <input asp-for="DepartmentNumber" class="form-control" />

            <span asp-validation-for="DepartmentNumber" class="text-danger"></span>

            </div>*@

            <div class="form-group">

                <label asp-for="Name" class="control-label"></label>

                <input asp-for="Name" class="form-control" />

                <span asp-validation-for="Name" class="text-danger"></span>

            </div>

            <div class="form-group">

                <input type="submit" value="Create" class="btn btn-primary" />

            </div>

        </form>

    </div>

</div>



<div>

    <a asp-action="Index">Back to List</a>

</div>



@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}