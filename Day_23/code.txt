npm install @auth0/angular-jwt

----------------------------------
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { FirstComponent } from './first/first.component';
import { SecondComponent } from './second/second.component';
import { ThirdComponent } from './third/third.component';
import { EmployeeComponent } from './employee/employee.component';
import { FormsModule } from '@angular/forms';
import { EmployeesComponent } from './employees/employees.component';
import { EmployeeService } from './services/employee.service';
import { DeleteEmpComponent } from './delete-emp/delete-emp.component';
import {HttpClientModule} from '@angular/common/http';
import { EmployeeWebService } from './services/employeeweb.service';
import { LoginComponent } from './login/login.component';
import { UserService } from './services/user.service';
import { AuthGuard } from './services/auth.service';
import { JwtModule } from '@auth0/angular-jwt';

export function tokenGetter(){
  return sessionStorage.getItem("token");
}

@NgModule({
  declarations: [
    AppComponent,
    FirstComponent,
    SecondComponent,
    ThirdComponent,
    EmployeeComponent,
    EmployeesComponent,
    DeleteEmpComponent,
    LoginComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    HttpClientModule,
    JwtModule.forRoot({
      config:{
        tokenGetter:tokenGetter,
        allowedDomains:["http://localhost:5159/"]
      }
    })
  ],
  providers: [EmployeeService,EmployeeWebService,UserService,AuthGuard],
  bootstrap: [AppComponent]
})
export class AppModule { }
--------------------------------------------------------------
import { Injectable } from "@angular/core";
import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from "@angular/router";
import { JwtHelperService } from "@auth0/angular-jwt";
import { Observable } from "rxjs";


@Injectable()
export class AuthGuard implements CanActivate{
    
    constructor(private router:Router,
        private jwtHelper:JwtHelperService
        ){

    }
    canActivate(route: ActivatedRouteSnapshot, 
        state: RouterStateSnapshot
        ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {
        var isAuthenticated = this.checkAuthentication()
        if(!isAuthenticated)
            this.router.navigateByUrl('login');
        return isAuthenticated;
    }
    checkAuthentication() {
        var token = sessionStorage.getItem("token");
        if(token)
        {
            if(!this.jwtHelper.isTokenExpired(token))
                return true;
        }
        return false;
        // return sessionStorage.getItem("token")?true:false;
    }   

}
--------------------------------------------------
<h1 class="alert alert-info">My Angular appilcation</h1>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" routerLink="home">Home</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarNav">
    <ul class="navbar-nav">
      <li class="nav-item active">
        <a routerLink="employees" class="nav-link" >Employees</a>
      </li>
      <li class="nav-item">
        <a routerLink="add" class="nav-link" >Add</a>
      </li>
      <li class="nav-item">
        <a routerLink="delete" class="nav-link" >Delete</a>
      </li>
      <li class="nav-item" id="logout">
        <a (click)="logout()" class="nav-link" >Logout</a>
      </li>
    </ul>
  </div>
</nav>
<router-outlet></router-outlet>
-------------------------------------------------
import { Component } from '@angular/core';
import {Router } from '@angular/router';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'companyapp';
  constructor(private router:Router){

  }
  logout(){
    sessionStorage.removeItem("token");
    this.router.navigateByUrl("login");

  }
}
-----------------------------------------------------------------
{
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft.AspNetCore": "Warning"
        }
    },

    "ConnectionStrings": {
        "DefaultConnection": "Host=localhost;Port=5432;Database=dbHotelAngular22;UserId=postgres;Password=Pavank@506;"
    },
    "TokenKey": "This is Hotel Authentication key for my token",
    "AllowedHosts": "*"
}
--------------------------------------------------------------------
{
  "userName": "Raju",
  "password": null,
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiUmFqdSIsInJvbGUiOiJzdHJpbmciLCJuYmYiOjE2OTUzNzIzMzIsImV4cCI6MTY5NTQ1ODczMiwiaWF0IjoxNjk1MzcyMzMyfQ.8v2jIMLjRzm2fMJ_Ng0zTbGlVSJRyeIPq5UHP4crahU",
  "role": null
}

"userName": "Raju",
  "password": "Raju@123"
----------------------------------------
http://localhost:5156/api/User/Register

http://localhost:5156/api/User/Login

http://localhost:5156/api/Hotel

http://localhost:5156/api/Hotel

http://localhost:5156/api/Hotel?id=3

http://localhost:5156/api/Hotel/Update
------------------------------------------------
<div class="alert alert-danger">
    <select (change)="selectChange(hid.value)" 
            #hid 
            class="form-control">
        <option>--select--</option>
        <option *ngFor="let htl of hotels" [value]="htl.id">
            {{htl.id}}--{{htl.name}}--{{htl.location}}
        </option>
    </select>
    <div *ngIf="hotel.id != 0">
        Hotel Id : {{hotel.id}}
        <br/>
        Hotel Name : {{hotel.name}}
        <br/>
        Hotel Location : {{hotel.location}}
        <br/>
        <button (click)="updateHotel()" class="btn btn-dark">Update Hotel</button>
    </div>

    



